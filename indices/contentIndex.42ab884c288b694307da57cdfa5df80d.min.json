{"/":{"title":"Introdu√ß√£o","content":"\n\nEste √© um rascunho de notas de aula para os conte√∫dos de:\n\n- [[vault/calculo-numerico/visao-geral |C√°lculo Num√©rico]]\n- [[vault/estrutura-dados/visao-geral|Estrutura de Dados]]\n- Otimiza√ß√£o linear e inteira\n\n\nEstou utilizando a ferramenta Quartz. Mais informa√ß√µes a seguir. \n\nHost your second brain and [digital garden](https://jzhao.xyz/posts/networked-thought) for free. Quartz features\n\n1. Extremely fast natural-language [[notes/search|search]]\n2. Customizable and hackable design based on [Hugo](https://gohugo.io/)\n3. Automatically generated backlinks, link previews, and local graph\n4. Built-in [[notes/CJK + Latex Support (ÊµãËØï) | CJK + Latex Support]] and [[notes/callouts | Admonition-style callouts]]\n5. Support for both Markdown Links and Wikilinks\n\nCheck out some of the [amazing gardens that community members](notes/showcase.md) have published with Quartz or read about [why I made Quartz](notes/philosophy.md) to begin with.\n\n## Get Started\n\u003e üìö Step 1: [Setup your own digital garden using Quartz](notes/setup.md)\n\nReturning user? Figure out how to [[notes/updating|update]] your existing Quartz garden.\n\nIf you prefer browsing the contents of this site through a list instead of a graph, you see a list of all [setup-related notes](/tags/setup).\n\n### Troubleshooting\n- üößü™¥ [Troubleshooting and FAQ](notes/troubleshooting.md)\n- üêõ [Submit an Issue](https://github.com/jackyzha0/quartz/issues)\n- üëÄ [Discord Community](https://discord.gg/cRFFHYye7t)\n\n","lastmodified":"2022-09-06T11:15:32.303255225Z","tags":null},"/M%C3%A9todo-de-Newton":{"title":"M√©todo de Newton","content":"\nLink para a anima√ß√£o: https://en.wikipedia.org/wiki/Newton%27s_method#History\n\n\u003ciframe src=\"https://upload.wikimedia.org/wikipedia/commons/e/e0/NewtonIteration_Ani.gif\" title=\"Anima√ß√£o do M√©todo de Newton\" width=\"100%\" height=\"485\"\u003e\u003c/iframe\u003e\n\n$$x_{k+1} = x_k - \\frac{f(x_k)}{f'(x_{k})}$$\n\n## Exemplo com ciclo\n$f(x) = x^3 - 2x + 2$, com $x_0 = 0$","lastmodified":"2022-09-06T11:15:32.303255225Z","tags":null},"/notes/CJK-+-Latex-Support-%E6%B5%8B%E8%AF%95":{"title":"CJK + Latex Support (ÊµãËØï)","content":"\n## Chinese, Japanese, Korean Support\nÂá†‰πéÂú®Êàë‰ª¨ÊÑèËØÜÂà∞‰πãÂâçÔºåÊàë‰ª¨Â∑≤ÁªèÁ¶ªÂºÄ‰∫ÜÂú∞Èù¢„ÄÇ\n\nÏö∞Î¶¨Í∞Ä Í∑∏Í≤ÉÏùÑ ÏïåÍ∏∞ÎèÑ Ï†ÑÏóê Ïö∞Î¶¨Îäî ÎïÖÏùÑ Îñ†ÎÇ¨ÏäµÎãàÎã§.\n\nÁßÅ„Åü„Å°„Åå„Åù„Çå„ÇíÁü•„Çã„Åª„ÅºÂâç„Å´„ÄÅÁßÅ„Åü„Å°„ÅØÂú∞Èù¢„ÇíÈõ¢„Çå„Å¶„ÅÑ„Åæ„Åó„Åü„ÄÇ\n\n## Latex\n\nBlock math works with two dollar signs `$$...$$`\n\n$$f(x) = \\int_{-\\infty}^\\infty\n    f\\hat(\\xi),e^{2 \\pi i \\xi x}\n    \\,d\\xi$$\n\t\nInline math also works with single dollar signs `$...$`. For example, Euler's identity but inline: $e^{i\\pi} = 0$\n\nAligned equations work quite well:\n\n$$\n\\begin{aligned}\na \u0026= b + c \\\\ \u0026= e + f \\\\\n\\end{aligned}\n$$\n\nAnd matrices\n\n$$\n\\begin{bmatrix}\n1 \u0026 2 \u0026 3 \\\\\na \u0026 b \u0026 c\n\\end{bmatrix}\n$$\n\n## RTL\nMore information on configuring RTL languages like Arabic in the [config](notes/config.md) page.\n","lastmodified":"2022-09-06T11:15:32.303255225Z","tags":null},"/notes/callouts":{"title":"Callouts","content":"\n## Callout support\n\nQuartz supports the same Admonition-callout syntax as Obsidian.\n\nThis includes\n- 12 Distinct callout types (each with several aliases)\n- Collapsable callouts\n\nSee [documentation on supported types and syntax here](https://help.obsidian.md/How+to/Use+callouts#Types).\n\n## Showcase\n\n\u003e [!EXAMPLE] Examples\n\u003e\n\u003e Aliases: example\n\n\u003e [!note] Notes\n\u003e\n\u003e Aliases: note\n\n\u003e [!abstract] Summaries \n\u003e\n\u003e Aliases: abstract, summary, tldr\n\n\u003e [!info] Info \n\u003e\n\u003e Aliases: info, todo\n\n\u003e [!tip] Hint \n\u003e\n\u003e Aliases: tip, hint, important\n\n\u003e [!success] Success \n\u003e\n\u003e Aliases: success, check, done\n\n\u003e [!question] Question \n\u003e\n\u003e Aliases: question, help, faq\n\n\u003e [!warning] Warning \n\u003e\n\u003e Aliases: warning, caution, attention\n\n\u003e [!failure] Failure \n\u003e\n\u003e Aliases: failure, fail, missing\n\n\u003e [!danger] Error\n\u003e\n\u003e Aliases: danger, error\n\n\u003e [!bug] Bug\n\u003e\n\u003e Aliases: bug\n\n\u003e [!quote] Quote\n\u003e\n\u003e Aliases: quote, cite\n","lastmodified":"2022-09-06T11:15:32.303255225Z","tags":null},"/notes/config":{"title":"Configuration","content":"\n## Configuration\nQuartz is designed to be extremely configurable. You can find the bulk of the configuration scattered throughout the repository depending on how in-depth you'd like to get.\n\nThe majority of configuration can be found under `data/config.yaml`. An annotated example configuration is shown below.\n\n```yaml {title=\"data/config.yaml\"}\n# The name to display in the footer\nname: Jacky Zhao\n\n# whether to globally show the table of contents on each page\n# this can be turned off on a per-page basis by adding this to the\n# front-matter of that note\nenableToc: true\n\n# whether to by-default open or close the table of contents on each page\nopenToc: false\n\n# whether to display on-hover link preview cards\nenableLinkPreview: true\n\n# whether to render titles for code blocks\nenableCodeBlockTitle: true \n\n# whether to render copy buttons for code blocks\nenableCodeBlockCopy: true \n\n# whether to render callouts\nenableCallouts: true\n\n# whether to try to process Latex\nenableLatex: true\n\n# whether to enable single-page-app style rendering\n# this prevents flashes of unstyled content and improves\n# smoothness of Quartz. More info in issue #109 on GitHub\nenableSPA: true\n\n# whether to render a footer\nenableFooter: true\n\n# whether backlinks of pages should show the context in which\n# they were mentioned\nenableContextualBacklinks: true\n\n# whether to show a section of recent notes on the home page\nenableRecentNotes: false\n\n# whether to display an 'edit' button next to the last edited field\n# that links to github\nenableGitHubEdit: true\nGitHubLink: https://github.com/jackyzha0/quartz/tree/hugo/content\n\n# whether to use Operand to power semantic search\n# IMPORTANT: replace this API key with your own if you plan on using\n# Operand search!\nenableSemanticSearch: false\noperandApiKey: \"REPLACE-WITH-YOUR-OPERAND-API-KEY\"\n\n# page description used for SEO\ndescription:\n  Host your second brain and digital garden for free. Quartz features extremely fast full-text search,\n  Wikilink support, backlinks, local graph, tags, and link previews.\n\n# title of the home page (also for SEO)\npage_title:\n  \"ü™¥ Quartz 3.2\"\n\n# links to show in the footer\nlinks:\n  - link_name: Twitter\n    link: https://twitter.com/_jzhao\n  - link_name: Github\n    link: https://github.com/jackyzha0\n```\n\n### Code Block Titles\nTo add code block titles with Quartz:\n\n1. Ensure that code block titles are enabled in Quartz's configuration:\n\n    ```yaml {title=\"data/config.yaml\", linenos=false}\n    enableCodeBlockTitle: true\n    ```\n\n2. Add the `title` attribute to the desired [code block\n   fence](https://gohugo.io/content-management/syntax-highlighting/#highlighting-in-code-fences):\n\n      ```markdown {linenos=false}\n       ```yaml {title=\"data/config.yaml\"}\n       enableCodeBlockTitle: true  # example from step 1\n       ```\n      ```\n\n**Note** that if `{title=\u003cmy-title\u003e}` is included, and code block titles are not\nenabled, no errors will occur, and the title attribute will be ignored.\n\n### HTML Favicons\nIf you would like to customize the favicons of your Quartz-based website, you \ncan add them to the `data/config.yaml` file. The **default** without any set \n`favicon` key is:\n\n```html {title=\"layouts/partials/head.html\", linenostart=15}\n\u003clink rel=\"shortcut icon\" href=\"icon.png\" type=\"image/png\"\u003e\n```\n\nThe default can be overridden by defining a value to the `favicon` key in your \n`data/config.yaml` file. For example, here is a `List[Dictionary]` example format, which is\nequivalent to the default:\n\n```yaml {title=\"data/config.yaml\", linenos=false}\nfavicon:\n  - { rel: \"shortcut icon\", href: \"icon.png\", type: \"image/png\" }\n#  - { ... } # Repeat for each additional favicon you want to add\n```\n\nIn this format, the keys are identical to their HTML representations.\n\nIf you plan to add multiple favicons generated by a website (see list below), it\nmay be easier to define it as HTML. Here is an example which appends the \n**Apple touch icon** to Quartz's default favicon:\n\n```yaml {title=\"data/config.yaml\", linenos=false}\nfavicon: |\n  \u003clink rel=\"shortcut icon\" href=\"icon.png\" type=\"image/png\"\u003e\n  \u003clink rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/apple-touch-icon.png\"\u003e\n```\n\nThis second favicon will now be used as a web page icon when someone adds your \nwebpage to the home screen of their Apple device. If you are interested in more \ninformation about the current and past standards of favicons, you can read \n[this article](https://www.emergeinteractive.com/insights/detail/the-essentials-of-favicons/).\n\n**Note** that all generated favicon paths, defined by the `href` \nattribute, are relative to the `static/` directory.\n\n### Graph View\nTo customize the Interactive Graph view, you can poke around `data/graphConfig.yaml`.\n\n```yaml {title=\"data/graphConfig.yaml\"}\n# if true, a Global Graph will be shown on home page with full width, no backlink.\n# A different set of Local Graphs will be shown on sub pages.\n# if false, Local Graph will be default on every page as usual\nenableGlobalGraph: false\n\n### Local Graph ###\nlocalGraph:\n    # whether automatically generate a legend\n    enableLegend: false\n    \n    # whether to allow dragging nodes in the graph\n    enableDrag: true\n    \n    # whether to allow zooming and panning the graph\n    enableZoom: true\n    \n    # how many neighbours of the current node to show (-1 is all nodes)\n    depth: 1\n    \n    # initial zoom factor of the graph\n    scale: 1.2\n    \n    # how strongly nodes should repel each other\n    repelForce: 2\n\n    # how strongly should nodes be attracted to the center of gravity\n    centerForce: 1\n\n    # what the default link length should be\n    linkDistance: 1\n    \n    # how big the node labels should be\n    fontSize: 0.6\n    \n    # scale at which to start fading the labes on nodes\n    opacityScale: 3\n\n### Global Graph ###\nglobalGraph:\n\t# same settings as above\n\n### For all graphs ###\n# colour specific nodes path off of their path\npaths:\n  - /moc: \"#4388cc\"\n```\n\n\n## Styling\nWant to go even more in-depth? You can add custom CSS styling and change existing colours through editing `assets/styles/custom.scss`. If you'd like to target specific parts of the site, you can add ids and classes to the HTML partials in `/layouts/partials`. \n\n### Partials\nPartials are what dictate what gets rendered to the page. Want to change how pages are styled and structured? You can edit the appropriate layout in `/layouts`.\n\nFor example, the structure of the home page can be edited through `/layouts/index.html`. To customize the footer, you can edit `/layouts/partials/footer.html`\n\nMore info about partials on [Hugo's website.](https://gohugo.io/templates/partials/)\n\nStill having problems? Checkout our [FAQ and Troubleshooting guide](notes/troubleshooting.md).\n\n## Language Support\n[CJK + Latex Support (ÊµãËØï)](notes/CJK%20+%20Latex%20Support%20(ÊµãËØï).md) comes out of the box with Quartz.\n\nWant to support languages that read from right-to-left (like Arabic)? Hugo (and by proxy, Quartz) supports this natively.\n\nFollow the steps [Hugo provides here](https://gohugo.io/content-management/multilingual/#configure-languages) and modify your `config.toml`\n\nFor example:\n\n```toml\ndefaultContentLanguage = 'ar'\n[languages]\n  [languages.ar]\n    languagedirection = 'rtl'\n    title = 'ŸÖÿØŸàŸÜÿ™Ÿä'\n    weight = 1\n```\n","lastmodified":"2022-09-06T11:15:32.303255225Z","tags":null},"/notes/custom-Domain":{"title":"Custom Domain","content":"\n### Registrar\nThis step is only applicable if you are using a **custom domain**! If you are using a `\u003cYOUR-USERNAME\u003e.github.io` domain, you can skip this step.\n\nFor this last bit to take effect, you also need to create a CNAME record with the DNS provider you register your domain with (i.e. NameCheap, Google Domains).\n\nGitHub has some [documentation on this](https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site), but the tldr; is to\n\n1. Go to your forked repository (`github.com/\u003cYOUR-GITHUB-USERNAME\u003e/quartz`) settings page and go to the Pages tab. Under \"Custom domain\", type your custom domain, then click **Save**.\n2. Go to your DNS Provider and create a CNAME record that points from your domain to `\u003cYOUR-GITHUB-USERNAME.github.io.` (yes, with the trailing period).\n\n\t![Example Configuration for Quartz](/notes/images/google-domains.png)*Example Configuration for Quartz*\n3. Wait 30 minutes to an hour for the network changes to kick in.\n4. Done!","lastmodified":"2022-09-06T11:15:32.303255225Z","tags":null},"/notes/editing":{"title":"Editing Content in Quartz","content":"\n## Editing \nQuartz runs on top of [Hugo](https://gohugo.io/) so all notes are written in [Markdown](https://www.markdownguide.org/getting-started/).\n\n### Folder Structure\nHere's a rough overview of what's what.\n\n**All content in your garden can found in the `/content` folder.** To make edits, you can open any of the files and make changes directly and save it. You can organize content into any folder you'd like.\n\n**To edit the main home page, open `/content/_index.md`.**\n\nTo create a link between notes in your garden, just create a normal link using Markdown pointing to the document in question. Please note that **all links should be relative to the root `/content` path**. \n\n```markdown\nFor example, I want to link this current document to `notes/config.md`.\n[A link to the config page](notes/config.md)\n```\n\nSimilarly, you can put local images anywhere in the `/content` folder.\n\n```markdown\nExample image (source is in content/notes/images/example.png)\n![Example Image](/content/notes/images/example.png)\n```\n\nYou can also use wikilinks if that is what you are more comfortable with!\n\n### Front Matter\nHugo is picky when it comes to metadata for files. Make sure that your title is double-quoted and that you have a title defined at the top of your file like so. You can also add tags here as well.\n\n```yaml\n---\ntitle: \"Example Title\"\ntags:\n- example-tag\n---\n\nRest of your content here...\n```\n\n### Obsidian\nI recommend using [Obsidian](http://obsidian.md/) as a way to edit and grow your digital garden. It comes with a really nice editor and graphical interface to preview all of your local files.\n\nThis step is **highly recommended**.\n\n\u003e üîó Step 3: [How to setup your Obsidian Vault to work with Quartz](notes/obsidian.md)\n\n## Previewing Changes\nThis step is purely optional and mostly for those who want to see the published version of their digital garden locally before opening it up to the internet. This is *highly recommended* but not required.\n\n\u003e üëÄ Step 4: [Preview Quartz Changes](notes/preview%20changes.md)\n\nFor those who like to live life more on the edge, viewing the garden through Obsidian gets you pretty close to the real thing.\n\n## Publishing Changes\nNow that you know the basics of managing your digital garden using Quartz, you can publish it to the internet!\n\n\u003e üåç Step 5: [Hosting Quartz online!](notes/hosting.md)\n\nHaving problems? Checkout our [FAQ and Troubleshooting guide](notes/troubleshooting.md).\n","lastmodified":"2022-09-06T11:15:32.303255225Z","tags":null},"/notes/hosting":{"title":"Deploying Quartz to the Web","content":"\n## Hosting on GitHub Pages\nQuartz is designed to be effortless to deploy. If you forked and cloned Quartz directly from the repository, everything should already be good to go! Follow the steps below.\n\n### Enable GitHub Actions\nBy default, GitHub disables workflows from running automatically on Forked Repostories. Head to the 'Actions' tab of your forked repository and Enable Workflows to setup deploying your Quartz site!\n\n![Enable GitHub Actions](notes/images/github-actions.png)*Enable GitHub Actions*\n\n### Enable GitHub Pages\n\nHead to the 'Settings' tab of your forked repository and go to the 'Pages' tab.\n\n1. (IMPORTANT) Set the source to deploy from `master` (and not `hugo`) using `/ (root)`\n2. Set a custom domain here if you have one!\n\n![Enable GitHub Pages](/notes/images/github-pages.png)*Enable GitHub Pages*\n\n### Pushing Changes\nTo see your changes on the internet, we need to push it them to GitHub. Quartz is a `git` repository so updating it is the same workflow as you would follow as if it were just a regular software project.\n\n```shell\n# Navigate to Quartz folder\ncd \u003cpath-to-quartz\u003e\n\n# Commit all changes\ngit add .\ngit commit -m \"message describing changes\"\n\n# Push to GitHub to update site\ngit push origin hugo\n```\n\nNote: we specifically push to the `hugo` branch here. Our GitHub action automatically runs everytime a push to is detected to that branch and then updates the `master` branch for redeployment.\n\n### Setting up the Site\nNow let's get this site up and running. Never hosted a site before? No problem. Have a fancy custom domain you already own or want to subdomain your Quartz? That's easy too.\n\nHere, we take advantage of GitHub's free page hosting to deploy our site. Change `baseURL` in `/config.toml`. \n\nMake sure that your `baseURL` has a trailing `/`!\n\n[Reference `config.toml` here](https://github.com/jackyzha0/quartz/blob/hugo/config.toml)\n\n```toml\nbaseURL = \"https://\u003cYOUR-DOMAIN\u003e/\"\n```\n\nIf you are using this under a subdomain (e.g. `\u003cYOUR-GITHUB-USERNAME\u003e.github.io/quartz`), include the trailing `/`. **You need to do this especially if you are using GitHub!**\n\n```toml\nbaseURL = \"https://\u003cYOUR-GITHUB-USERNAME\u003e.github.io/quartz/\"\n```\n\nChange `cname` in `/.github/workflows/deploy.yaml`. Again, if you don't have a custom domain to use, you can use `\u003cYOUR-USERNAME\u003e.github.io`.\n\nPlease note that the `cname` field should *not* have any path `e.g. end with /quartz` or have a trailing `/`.\n\n[Reference `deploy.yaml` here](https://github.com/jackyzha0/quartz/blob/hugo/.github/workflows/deploy.yaml)\n\n```yaml {title=\".github/workflows/deploy.yaml\"}\n- name: Deploy  \n  uses: peaceiris/actions-gh-pages@v3  \n  with:  \n\tgithub_token: ${{ secrets.GITHUB_TOKEN }} # this can stay as is, GitHub fills this in for us!\n\tpublish_dir: ./public  \n\tpublish_branch: master\n\tcname: \u003cYOUR-DOMAIN\u003e\n```\n\nHave a custom domain? [Learn how to set it up with Quartz ](notes/custom%20Domain.md).\n\n### Ignoring Files\nOnly want to publish a subset of all of your notes? Don't worry, Quartz makes this a simple two-step process.\n\n‚ùå [Excluding pages from being published](notes/ignore%20notes.md)\n\n---\n\nNow that your Quartz is live, let's figure out how to make Quartz really *yours*!\n\n\u003e Step 6: üé® [Customizing Quartz](notes/config.md)\n\nHaving problems? Checkout our [FAQ and Troubleshooting guide](notes/troubleshooting.md).\n","lastmodified":"2022-09-06T11:15:32.303255225Z","tags":null},"/notes/ignore-notes":{"title":"Ignoring Notes","content":"\n### Quartz Ignore\nEdit `ignoreFiles` in `config.toml` to include paths you'd like to exclude from being rendered.\n\n```toml\n...\nignoreFiles = [  \n    \"/content/templates/*\",  \n    \"/content/private/*\", \n    \"\u003cyour path here\u003e\"\n]\n```\n\n`ignoreFiles` supports the use of Regular Expressions (RegEx) so you can ignore patterns as well (e.g. ignoring all `.png`s by doing `\\\\.png$`).\nTo ignore a specific file, you can also add the tag `draft: true` to the frontmatter of a note.\n\n```markdown\n---\ntitle: Some Private Note\ndraft: true\n---\n...\n```\n\nMore details in [Hugo's documentation](https://gohugo.io/getting-started/configuration/#ignore-content-and-data-files-when-rendering).\n\n### Global Ignore\nHowever, just adding to the `ignoreFiles` will only prevent the page from being access through Quartz. If you want to prevent the file from being pushed to GitHub (for example if you have a public repository), you need to also add the path to the `.gitignore` file at the root of the repository.","lastmodified":"2022-09-06T11:15:32.303255225Z","tags":null},"/notes/obsidian":{"title":"Obsidian Vault Integration","content":"\n## Setup\nObsidian is the preferred way to use Quartz. You can either create a new Obsidian Vault or link one that your already have.\n\n### New Vault\nIf you don't have an existing Vault, [download Obsidian](https://obsidian.md/) and create a new Vault in the `/content` folder that you created and cloned during the [setup](notes/setup.md) step.\n\n### Linking an existing Vault\nThe easiest way to use an existing Vault is to copy all of your files (directory and hierarchies intact) into the `/content` folder.\n\n## Settings\nGreat, now that you have your Obsidian linked to your Quartz, let's fix some settings so that they play well.\n\n1. Under Options \u003e Files and Links, set the New link format to always use Absolute Path in Vault.\n2. Go to Settings \u003e Files \u0026 Links \u003e Turn \"on\" automatically update internal links.\n\n![Obsidian Settings](/notes/images/obsidian-settings.png)*Obsidian Settings*\n\n## Templates\nInserting front matter everytime you want to create a new Note gets annoying really quickly. Luckily, Obsidian supports templates which makes inserting new content really easily.\n\n**If you decide to overwrite the `/content` folder completely, don't remove the `/content/templates` folder!**\n\nHead over to Options \u003e Core Plugins and enable the Templates plugin. Then go to Options \u003e Hotkeys and set a hotkey for 'Insert Template' (I recommend `[cmd]+T`). That way, when you create a new note, you can just press the hotkey for a new template and be ready to go!\n\n\u003e üëÄ Step 4: [Preview Quartz Changes](notes/preview%20changes.md)","lastmodified":"2022-09-06T11:15:32.307255258Z","tags":null},"/notes/philosophy":{"title":"Quartz Philosophy","content":"\n\u003e ‚Äú[One] who works with the door open gets all kinds of interruptions, but [they] also occasionally gets clues as to what the world is and what might be important.‚Äù ‚Äî Richard Hamming\n\n## Why Quartz?\nHosting a public digital garden isn't easy. There are an overwhelming number of tutorials, resources, and guides for tools like [Notion](https://www.notion.so/), [Roam](https://roamresearch.com/), and [Obsidian](https://obsidian.md/), yet none of them have super easy to use *free* tools to publish that garden to the world.\n\nI've personally found that\n1. It's nice to access notes from anywhere\n2. Having a public digital garden invites open conversations\n3. It makes keeping personal notes and knowledge *playful and fun*\n\nI was really inspired by [Bianca](https://garden.bianca.digital/) and [Joel](https://joelhooks.com/digital-garden)'s digital gardens and wanted to try making my own.\n\n**The goal of Quartz is to make hosting your own public digital garden free and simple.** You don't even need your own website. Quartz does all of that for you and gives your own little corner of the internet.\n","lastmodified":"2022-09-06T11:15:32.307255258Z","tags":null},"/notes/preview-changes":{"title":"Preview Changes","content":"\nIf you'd like to preview what your Quartz site looks like before deploying it to the internet, here's exactly how to do that!\n\nNote that both of these steps need to be completed.\n\n## Install `hugo-obsidian`\nThis step will generate the list of backlinks for Hugo to parse. Ensure you have [Go](https://golang.org/doc/install) (\u003e= 1.16) installed.\n\n```bash\n# Install and link `hugo-obsidian` locally\ngo install github.com/jackyzha0/hugo-obsidian@latest\n```\n\nIf you are running into an error saying that `command not found: hugo-obsidian`, make sure you set your `GOPATH` correctly! This will allow your terminal to correctly recognize hugo-obsidian as an executable.\n\nAfterwards, start the Hugo server as shown above and your local backlinks and interactive graph should be populated!\n\n##  Installing Hugo\nHugo is the static site generator that powers Quartz. [Install Hugo with \"extended\" Sass/SCSS version](https://gohugo.io/getting-started/installing/) first. Then,\n\n```bash\n# Navigate to your local Quartz folder\ncd \u003clocation-of-your-local-quartz\u003e\n\n# Start local server\nmake serve\n\n# View your site in a browser at http://localhost:1313/\n```\n\n\u003e üåç Step 5: [Hosting Quartz online!](notes/hosting.md)","lastmodified":"2022-09-06T11:15:32.307255258Z","tags":null},"/notes/search":{"title":"Search","content":"\nQuartz supports two modes of searching through content.\n\n## Full-text\nFull-text search is the default in Quartz. It produces results that *exactly* match the search query. This is easier to setup but usually produces lower quality matches.\n\n```yaml {title=\"data/config.yaml\"}\n# the default option\nenableSemanticSearch: false\n```\n\n## Natural Language\nNatural language search is powered by [Operand](https://operand.ai/). It understands language like a person does and finds results that best match user intent. In this sense, it is closer to how Google Search works.\n\nNatural language search tends to produce higher quality results than full-text search.\n\nHere's how to set it up.\n\n1. Create an Operand Account on [their website](https://operand.ai/).\n2. Go to Dashboard \u003e Settings \u003e Integrations.\n3. Follow the steps to setup the GitHub integration. Operand needs access to GitHub in order to index your digital garden properly!\n4. Head over to Dashboard \u003e Objects and press `(Cmd + K)` to open the omnibar and select 'Create Collection'.\n\t1. Set the 'Collection Label' to something that will help you remember it.\n\t2. You can leave the 'Parent Collection' field empty.\n5. Click into your newly made Collection.\n\t1. Press the 'share' button that looks like three dots connected by lines.\n\t2. Set the 'Interface Type' to `object-search` and click 'Create'.\n\t3. This will bring you to a new page with a search bar. Ignore this for now.\n6. Go back to Dashboard \u003e Settings \u003e API Keys and find your Quartz-specific Operand API key under 'Other keys'.\n\t1. Copy the key (which looks something like `0e733a7f-9b9c-48c6-9691-b54fa1c8b910`).\n\t2. Open `data/config.yaml`. Set `enableSemanticSearch` to `true` and `operandApiKey` to your copied key.\n\n```yaml {title=\"data/config.yaml\"}\n# the default option\nenableSemanticSearch: true\noperandApiKey: \"0e733a7f-9b9c-48c6-9691-b54fa1c8b910\"\n```\n7. Make a commit and push your changes to GitHub. See the [[notes/hosting|hosting]] page if you haven't done this already.\n\t1. This step is *required* for Operand to be able to properly index your content. \n\t2. Head over to Dashboard \u003e Objects and select the collection that you made earlier\n8. Press `(Cmd + K)` to open the omnibar again and select 'Create GitHub Repo'\n\t1. Set the 'Repository Label' to `Quartz`\n\t2. Set the 'Repository Owner' to your GitHub username\n\t3. Set the 'Repository Ref' to `master`\n\t4. Set the 'Repository Name' to the name of your repository (usually just `quartz` if you forked the repository without changing the name)\n\t5. Leave 'Root Path' and 'Root URL' empty\n9. Wait for your repository to index and enjoy natural language search in Quartz! Operand refreshes the index every 2h so all you need to do is just push to GitHub to update the contents in the search.","lastmodified":"2022-09-06T11:15:32.307255258Z","tags":null},"/notes/setup":{"title":"Setup","content":"\n## Making your own Quartz\nSetting up Quartz requires a basic understanding of `git`. If you are unfamiliar, [this resource](https://resources.nwplus.io/2-beginner/how-to-git-github.html) is a great place to start!\n\n### Forking\n\u003e A fork is a copy of a repository. Forking a repository allows you to freely experiment with changes without affecting the original project.\n\nNavigate to the GitHub repository for the Quartz project:\n\nüìÅ [Quartz Repository](https://github.com/jackyzha0/quartz)\n\nThen, Fork the repository into your own GitHub account. If you don't have an account, you can make on for free [here](https://github.com/join). More details about forking a repo can be found on [GitHub's documentation](https://docs.github.com/en/get-started/quickstart/fork-a-repo).\n\n### Cloning\nAfter you've made a fork of the repository, you need to download the files locally onto your machine. Ensure you have `git`, then type the following command replacing `YOUR-USERNAME` with your GitHub username.\n\n```shell\ngit clone https://github.com/YOUR-USERNAME/quartz\n```\n\n## Editing\nGreat! Now you have everything you need to start editing and growing your digital garden. If you're ready to start writing content already, check out the recommended flow for editing notes in Quartz.\n\n\u003e ‚úèÔ∏è Step 2: [Editing Notes in Quartz](notes/editing.md)\n\nHaving problems? Checkout our [FAQ and Troubleshooting guide](notes/troubleshooting.md).\n","lastmodified":"2022-09-06T11:15:32.307255258Z","tags":null},"/notes/showcase":{"title":"Showcase","content":"\nWant to see what Quartz can do? Here are some cool community gardens :)\n\n- [Quartz Documentation (this site!)](https://quartz.jzhao.xyz/)\n- [Jacky Zhao's Garden](https://jzhao.xyz/)\n- [Scaling Synthesis - A hypertext research notebook](https://scalingsynthesis.com/)\n- [AWAGMI Intern Notes](https://notes.awagmi.xyz/)\n- [Shihyu's PKM](https://shihyuho.github.io/pkm/)\n- [Chloe's Garden](https://garden.chloeabrasada.online/)\n- [SlRvb's Site](https://slrvb.github.io/Site/)\n- [Course notes for Information Technology Advanced Theory](https://a2itnotes.github.io/quartz/)\n- [Brandon Boswell's Garden](https://brandonkboswell.com)\n- [Siyang's Courtyard](https://siyangsun.github.io/courtyard/)\n\nIf you want to see your own on here, submit a [Pull Request adding yourself to this file](https://github.com/jackyzha0/quartz/blob/hugo/content/notes/showcase.md)!\n","lastmodified":"2022-09-06T11:15:32.307255258Z","tags":null},"/notes/troubleshooting":{"title":"Troubleshooting and FAQ","content":"\nStill having trouble? Here are a list of common questions and problems people encounter when installing Quartz.\n\nWhile you're here, join our [Discord](https://discord.gg/cRFFHYye7t) :)\n\n### Does Quartz have Latex support?\nYes! See [CJK + Latex Support (ÊµãËØï)](notes/CJK%20+%20Latex%20Support%20(ÊµãËØï).md) for a brief demo.\n\n### Can I use \\\u003cObsidian Plugin\\\u003e in Quartz?\nUnless it produces direct Markdown output in the file, no. There currently is no way to bundle plugin code with Quartz.\n\nThe easiest way would be to add your own HTML partial that supports the functionality you are looking for.\n\n### My GitHub pages is just showing the README and not Quartz\nMake sure you set the source to deploy from `master` (and not `hugo`) using `/ (root)`! See more in the [hosting](/notes/hosting) guide\n\n### Some of my pages have 'January 1, 0001' as the last modified date\nThis is a problem caused by `git` treating files as case-insensitive by default and some of your posts probably have capitalized file names. You can turn this off in your Quartz by running this command.\n\n```shell\n# in the root of your Quartz (same folder as config.toml)\ngit config core.ignorecase true\n\n# or globally (not recommended)\ngit config --global core.ignorecase true\n```\n\n### Can I publish only a subset of my pages?\nYes! Quartz makes selective publishing really easy. Heres a guide on [excluding pages from being published](notes/ignore%20notes.md).\n\n### Can I host this myself and not on GitHub Pages?\nYes! All built files can be found under `/public` in the `master` branch. More details under [hosting](notes/hosting.md).\n\n### `command not found: hugo-obsidian`\nMake sure you set your `GOPATH` correctly! This will allow your terminal to correctly recognize `hugo-obsidian` as an executable.\n\n```shell\n# Add the following 2 lines to your ~/.bash_profile\nexport GOPATH=/Users/$USER/go\nexport PATH=$GOPATH/bin:$PATH\n\n# In your current terminal, to reload the session\nsource ~/.bash_profile\n```\n\n### How come my notes aren't being rendered?\nYou probably forgot to include front matter in your Markdown files. You can either setup [Obsidian](notes/obsidian.md) to do this for you or you need to manually define it. More details in [the 'how to edit' guide](notes/editing.md).\n\n### My custom domain isn't working!\nWalk through the steps in [the hosting guide](notes/hosting.md) again. Make sure you wait 30 min to 1 hour for changes to take effect.\n\n### How do I setup Google Analytics?\nYou can edit it in `config.toml` and either use a V3 (UA-) or V4 (G-) tag.\n\n### How do I change the content on the home page?\nTo edit the main home page, open `/content/_index.md`.\n\n### How do I change the colours?\nYou can change the theme by editing `assets/custom.scss`. More details on customization and themeing can be found in the [customization guide](notes/config.md).\n\n### How do I add images?\nYou can put images anywhere in the `/content` folder.\n\n```markdown\nExample image (source is in content/notes/images/example.png)\n![Example Image](/content/notes/images/example.png)\n```\n\n### My Interactive Graph and Backlinks aren't up to date\nBy default, the `linkIndex.json` (which Quartz needs to generate the Interactive Graph and Backlinks) are not regenerated locally. To set that up, see the guide on [local editing](notes/editing.md)\n\n### Can I use React/Vue/some other framework?\nNot out of the box. You could probably make it work by editing `/layouts/_default/single.html` but that's not what Quartz is designed to work with. 99% of things you are trying to do with those frameworks you can accomplish perfectly fine using just vanilla HTML/CSS/JS.\n\n## Still Stuck?\nQuartz isn't perfect! If you're still having troubles, file an issue in the GitHub repo with as much information as you can reasonably provide. Alternatively, you can message me on [Twitter](https://twitter.com/_jzhao) and I'll try to get back to you as soon as I can.\n\nüêõ [Submit an Issue](https://github.com/jackyzha0/quartz/issues)","lastmodified":"2022-09-06T11:15:32.307255258Z","tags":null},"/notes/updating":{"title":"Updating","content":"\nHaven't updated Quartz in a while and want all the cool new optimizations? On Unix/Mac systems you can run the following command for a one-line update! This command will show you a log summary of all commits since you last updated, press `q` to acknowledge this. Then, it will show you each change in turn and press `y` to accept the patch or `n` to reject it. Usually you should press `y` for most of these unless it conflicts with existing changes you've made! \n\n```shell\nmake update\n```\n\nOr, if you don't want the interactive parts and just want to force update your local garden (this assumed that you are okay with some of your personalizations been overriden!)\n\n```shell\nmake update-force\n```\n\nOr, manually checkout the changes yourself.\n\n\u003e [!warning] Warning!\n\u003e\n\u003e If you customized the files in `data/`, or anything inside `layouts/`, your customization may be overwritten!\n\u003e Make sure you have a copy of these changes if you don't want to lose them.\n\n\n```shell\n# add Quartz as a remote host\ngit remote add upstream git@github.com:jackyzha0/quartz.git\n\n# index and fetch changes\ngit fetch upstream\ngit checkout -p upstream/hugo -- layouts .github Makefile assets/js assets/styles/base.scss assets/styles/darkmode.scss config.toml data \n```\n","lastmodified":"2022-09-06T11:15:32.307255258Z","tags":null},"/vault/calculo-numerico/visao-geral":{"title":"Vis√£o geral","content":"\n- O que √© C√°lculo Num√©rico\n\t- Solu√ß√£o de modelos matem√°ticos. \n- A ordem das parcelas altera a soma\n\t- [[Sistemas de numera√ß√£o]]\n\t- [[Convers√µes entre bases]]\n\t- [[N√∫meros reais versus representa√ß√£o digital]]\n- Solu√ß√£o de equa√ß√µes\n\t- [[M√©todo da biparti√ß√£o]]\n\t- [[M√©todo da falsa-posi√ß√£o]]\n\t- [[M√©todo de Newton]]\n\t- [[Resolu√ß√£o de equa√ß√µes polinomais]]\n\t- [[M√©todo de Birge-Vietta]]\n\t- [[M√©todo de M√ºller]]\n- Solu√ß√£o de sistemas de equa√ß√µes\n\t- Sistemas lineares\n\t\t- [[Elimina√ß√£o de Gauss]]\n\t\t- [[Decomposi√ß√£o LU]]\n\t\t- [[M√©todo de Jacobi]]\n\t\t- [[M√©todo de Gauss-Seidel]]\n\t\t- [[T√©cnicas de relaxa√ß√£o]]\n\t- Sistemas n√£o lineares\n\t\t- [[M√©todo de Newton]]\n\t\t- [[M√©todos de Quasi-Newton]]\n- Resolu√ß√£o n√∫mero de Equa√ß√µes Diferenciais\n\t- [[M√©todo de Euler]]\n\t- [[M√©todos de Runge-Kutta]]\n\t- [[Sistemas de equa√ß√µes diferenciais]]\n- Resolu√ß√£o num√©rica de integrais definidas\n\t- [[M√©todos de Newton-C√¥tes]]\n\t- [[M√©todos de Gauss-Legendre]]\n- Ajustamento de curvas\n\t- [[M√©todo dos m√≠nimos quadrados]]\n- Interpola√ß√£o polinomial\n\t- [[Exist√™ncia e unicidade do polin√¥mio interpolador]]\n\t- [[M√©todo de Lagrange]]\n\t- [[M√©todo de Gregory-Newton]]\n\t- [[Erros de truncamento em interpola√ß√£o]]\n\t- [[Splines c√∫bicas]]\n- [[Octave]]","lastmodified":"2022-09-06T11:15:32.39125597Z","tags":null},"/vault/estrutura-dados/%C3%81rvores-B":{"title":"√Årvores B","content":"\n# √Årvores B\n\n- Diversos sistemas de bancos de dados utilizam √Årvores B (ou variantes) para armazenar as informa√ß·∫Ωos.\n- Generaliza√ß√£o de [[√Årvores bin√°rias de busca]].\n- √â uma √°rvore semi balanceada.\n- √â interessante para armazenar itens em mem√≥ria principal ou secund√°ria. \n\t- [[√Årvore AVL]] e [[√Årvores preto-e-vermelho]] n√£o s√£o adequadas para mem√≥ria secund√°ria\n- Objetivo: Minimizar n√∫mero de opera√ß√µes de movimenta√ß√£o de dados (escrita/leitura)\n- Foi criada para lidar com situa√ß√µes em que o √≠ndice possui um n√∫mero grandes de chaves, apenas uma pequena fra√ß√£o delas pode ser gerenciada de forma eficiente em mem√≥ria principal.\n- A organiza√ß√£o de √≠ndices utilizado uma √°rvore B permite busca, inser√ß√£o e remo√ß√£o em tempo $O(log_t n)$  onde $n$ √© o tamanho do √≠ndice e $t$ um par√¢metro a ser definido.\n\n\u003e Uma √°rvore B, $T$, possui as seguintes propriedades:\n\t\u003e\u003e Cada n√≥ $x$ armazena $x_n$ chaves $x_{k_1} \\leq x_{k_2} \\leq \\ldots \\leq x_{k_n}$.\n\t\u003e\u003e Cada n√≥ interno cont√©m $x_{n+1}$ refer√™ncias $x_{c_1}, x_{c_2}, \\ldots, x_{c_{n+1}}$ para seus filhos.\n\t\u003e\u003e As chaves $x_{k_i}$ delimitam os valores das chaves armazenadas em cada sub√°rvore. Seja $k_i$ uma chave armazenada na sub√°rvore com raiz $x_{c_i}$, ent√£o: $$k_1 \\leq x_{k_1} \\leq k_2 \\leq x_{k_2} \\leq \\ldots \\leq x_{k_{x_n}} \\leq k_{x_n + 1}.$$\n\t\u003e\u003e Todas as folhas possuem a mesma profundidade\n\t\u003e\u003e N√≥s possuem um n√∫mero m√°ximo e m√≠nimo de chaves que podem armazenar. Esses limitantes s√£o express√µes em fun√ß√µes de um par√¢metro $t \\geq 2$, denominado de grau m√≠nimo da √°rvore B. \n\t\u003e\u003e\u003e Cada n√≥ com exce√ß√£o da raiz possui pelo menos $t - 1$ chaves. Todo n√≥ interno com exce√ß√£o da raiz possui no m√≠nimo $t$ filhos. \n\t\u003e\u003e\u003e Todo n√≥ possui no m√°ximo $2t-1$ chaves. Todo n√≥ interno possui no m√°ximo $2t$ filhos. \n\n- A √°rvore B mais simples possui $t=2$. Cada n√≥ interno possui 2, 3 ou 4 filhos (ou seja, √© uma 2-3-4 √°rvore).\n\n![[vault/attachments/ArvoreBexemplo.excalidraw|900]]\n\n\n- O n√∫mero de acessos ao disco em uma √Årvore B √© proporcional a altura da √°rvore, para a maiora das opera√ß√µes\n\n- Teorema: \n\u003e Seja $n \\geq 1$, ent√£o para qualquer √°rvore B com $n$ chaves, altura $h$ e grau m√≠nimo $t \\geq 2$ tem-se $$h \\leq log_t \\frac{n+1}{2}.$$ Ou seja, a altura √© $O(log_t n)$ \n\n- Demonstra√ß√£o\n- A raiz da √°rvore cont√©m pelo menos uma chave e todos os demais n√≥s cont√©m pelo menos $t-1$ chaves. Ou seja, existem pelos menos:\n\t - $2$ n√≥s com profundidade $1$;\n\t - $2t$ n√≥s com profundidade $2$;\n\t - $2t^2$ n√≥s com profundidade 3;\n\t - ...\n\t - $2t^{(h-1)}$ n√≥s com profundidade $h$.\n - Ou seja, o n√∫mero de n√≥s $n$ satisfaz $$n \\geq 1 + (t-1)\\sum_{i=1}^h (2t^{(i-1)}) = 1 + 2(t-1)\\frac{(t^h-1)}{t-1}.$$ Portanto $n \\geq 2t^h - 1$, resolvendo para $h$ tem-se a prova do teorema.\n\n## Opera√ß√µes elementares em uma √°rvore B\n\nPara os algoritmos a seguir √© suposto:\n- node[i]: retorna a chave na posi√ß√£o $i$ presente em $node$. \n- node.n: retorna o n√∫mero de elementos em $node$.\n- O m√©todo node.is_leaf() responde se $node$ √© uma folha.\n- node.child[i]: returna a $i$-√©sima sub√°rvore enraizada em $node$.\n\n### Busca\n\nA busca em uma √°rvore B √© an√°loga a uma busca em uma [[√Årvores bin√°rias de busca|√Årvore bin√°ria de busca]]. Em cada n√≥, √© necess√°rio verificar qual a sub√°rvore que potencialmente cont√©m o elemento de interesse.\n\n```\nfind(key, node):\n\ti = 0\n\twhile i \u003c node.n and key \u003e node[i]:\n\t\ti = i + 1\n\tif i \u003c node.n and key == node[i]:\n\t\treturn node, i\n\telse if node.is_leaf():\n\t\treturn None\n\telse:\n\t\tfind(key, node.child[i])\t\n\t\n```\n\nA complexidade da busca √© proporcional a altura da √°rvore, portanto $O(log_t \\ n)$. Note que, quanto maior o grau m√≠nimo da √°rvore, $t$, menor o n√∫mero de chamadas recursivas. Por qu√™? #pergunta\n\nDo ponto de vista de gerenciamento de arquivos. Suponha que foi utilizado uma estrat√©gia de acesso indexado sequencial, mas o √≠ndice √© grande o suficiente para n√£o poder ser armazenado todo na mem√≥ria principal. Como uma √°rvore B pode ser utilizada eficientemente nessa situa√ß√£o? #pergunta [[Organiza√ß√£o de arquivos#Arquivo indexado sequencial]]\n\n### Inser√ß√£o\n\nO processo de inser√ß√£o √© relativamente mais sofisticado do que no caso de [[√Årvores bin√°rias]]. Inicialmente, se busca pela folha onde ser√° realizada a inser√ß√£o. No entanto, n√£o se pode simplesmente criar um novo n√≥ para inserir o elemento, pois isso implicaria em uma viola√ß√£o das propriedades definidores de uma √°rvore B. Qual propriedade? #pergunta \n\nNesse caso, o objetivo √© inserir o elemento no pr√≥prio n√≥ folha, que pode estar cheio. Para lidar com tal situa√ß√£o, pode ser necess√°rio realizar uma opera√ß√£o de particionamento do n√≥ folha (*split*). \n\n#### Split\n\nUm n√≥ que est√° cheio, possui $2t-1$ chaves. A opera√ß√£o de *split* √© feita dividindo o n√≥ cheio em dois $x$ e $y$ com $t-1$ chaves cada. O elemento com a chave mediana, $node[t-1]$, √© \"promovido\" para o n√≥ pai, identificando o ponto de divis√£o entre os elementos de $x$ e $y$. Contudo, caso o n√≥ pai tamb√©m esteja cheio, √© necess√°rio realizar o *split* antes de inserir. Ou seja, a opera√ß√£o de *split* pode gerar uma rea√ß√£o em cadeia, at√© a raiz da √°rvore. \n\nUtilize o simulador https://www.cs.usfca.edu/~galles/visualization/BTree.html:\n1. Escolha a op√ß√£o Max. Degree = 4. Equivalente $t = 2$.\n2. Insira as chaves 10, 20 e 30, respectivamente. Note que uma nova inser√ß√£o implica em um *overflow* da raiz. Ou seja, ser√° necess√°ria uma opera√ß√£o de *split*.\n3. Insira a chave 0. Note que o n√≥ na posi√ß√£o $t-1 = 1$ foi promovido, marcando o ponto de separa√ß√£o entre as duas sub√°rvores geradas. \n4. Insira as chaves 2, 3 e 40 respectivamente. Com uma inser√ß√£o seguinte da chave 35, qual chave seria promovida e como ficariam os dois novos n√≥s gerados? #pergunta \n5. Insira a chave 35.\n6. Insira a chave 4 e a 50, respectivamente. Qual o estado final da √°rvore se for inserida a chave 55? #pergunta\n7. Insira a chave 55. \n\n#check (Cormen, pg 493)\n\u003e As with a binary search tree, we can insert a key into a B-tree in a single pass down the tree from the root to a leaf. To do so, we do not wait to find out whether we will actually need to split a full node in order to do the insertion. Instead, as we travel down the tree searching for the position where the new key belongs, we split each full node we come to along the way (including the leaf itself). Thus whenever we want to split a full node y, we are assured that its parent is not full.\n\n### Remo√ß√£o\n\nComo √© poss√≠vel remover elementos de n√≥s internos, e n√£o apenas de n√≥s folha, a opera√ß√£o de remo√ß√£o pode implicar na reorganiza√ß√£o de alguns elementos da √°rvore. Suponha que a busca pelo elemento a ser removido come√ßa no n√≥s raiz $x$\n\n1. Se a chave $k$ est√° em $x$ e $x$ √© um n√≥ folha. Remova $k$ de $x$.\n2. Se a chave $k$ est√° em $x$ e $x$ √© um n√≥ interno $x$:\n\t1. Se o filho $y$ que precede $k$ no n√≥ $x$ possui pelo menos $t$ chaves, encontre o predecessor $k'$ de $k$ na sub√°rvore cuja raiz √© $y$. Recursivamente remova $k'$ e substitua $k$ por $k'$ em $x$.\n\t2. Se $y$ possui menos de $t$ chaves, verifique se o filho $z$ que sucede $k$ em $x$. Se $z$ possuir pelo menos $t$ chaves, encontre o sucessor $k'$ de $k$ na sub√°rvore cuja raiz √© $z$. Recursivamente remova $k'$ e substitua $k$ por $k'$ em $x$.\n\t3. Caso ambos, $y$ e $z$, possuam $t-1$ chaves, fa√ßa uma jun√ß√£o (*merge*) de $z$  em $y$ ($k$ tamb√©m √© movido para $y$) e $y$ passa a conter $2t-1$ chaves. Ent√£o, destrua $z$ e recursivamente remove $k$ de $y$.\n3. Se a chave $k$ n√£o est√° presente em $x$ e $x$ √© um n√≥ interno $x$: Determine a raiz $x.c_i$ da sub√°rvore que (potencialmente) cont√©m $k$. Se $x.c_i$ possui apenas $t-1$ chaves, execute um dos passos a seguir para garantir que a busca continua em um n√≥ com pelo menos $t$ chaves. Ent√£o, continue recursivamente do filho apropriado de $x$\n\t1. Se $x.c_i$ possui apenas $t-1$ chaves mas possui um irm√£o imediato com $t$ chaves, mova uma chave de $x$ para $x.c_i$, mova a chave do irm√£o imediato de $x.c_i$ para $x$.\n\t2. Se $x.c_i$ e ambos os seus irm√£os possuem $t-1$ chaves, fa√ßa o *merge* de $x.c_i$ com um dos irm√£os (movendo uma chave de $x$ para o novo n√≥). \n\nConsidere o exemplo a seguir de [[2009Cormen_IntroductionToAlgorithms|Cormen et al. (2009)]] para uma √°rvore com $t = 3$.\n\n![[Pasted image 20220715163554.png]]\n\n![[Pasted image 20220715163604.png]]\n\nConsidere uma √°rvore com $n$ elementos. Em que tipo de n√≥ (folha ou interno), o ocorre o maior n√∫mero de remo√ß√µes? #pergunta\n\n## √Årvores B e gerenciamento de arquivos\n\nUma das motiva√ß√µes primordiais da proposi√ß√£o da estrutura de dados √Årvore B √© no contexto de gerencia de arquivos com acesso indexado sequencial. Nesse estrat√©gia, √© criado um √≠ndice auxiliar com a posi√ß√£o das chaves dos registros que est√£o armazenados em mem√≥ria secund√°ria. Quando o √≠ndice auxiliar pode ser armazenado completamente em mem√≥ria prim√°ria, h√° um grande ganho de efici√™ncia na opera√ß√£o de busca, em rela√ß√£o a ter que buscar em um arquivo em mem√≥ria secund√°ria. Por outro lado, pode n√£o ser poss√≠vel armazenar todo o √≠ndice em mem√≥ria prim√°ria. Nessa situa√ß√£o, pode ser interessante armazenar o √≠ndice em uma estrutura de √Årvore B. \n\nUma vantagem de se utilizar √°rvore B nesse caso √© a possibilidade de armazenar os n√≥s mais altos da √°rvore na mem√≥ria principal, minimizando o n√∫mero de requisi√ß√µes √† mem√≥ria secund√°ria. Al√©m disso, durante a busca, se for necess√°rio carregar novos dados em mem√≥ria, isso √© feito lendo um bloco de informa√ß√µes (e n√£o apenas um √∫nico valor, como seria no caso de outras [[√Årvores bin√°rias]]).\n\nUma desvantagem dessa estrat√©gia √© a de que s√£o armazenadas, em cada n√≥, refer√™ncias para cada valor na mem√≥ria secund√°ria, al√©m do valor em si (os registros propriamente ditos). Isso reduz consideravelmente o n√∫mero de chaves que pode ser armazenadas na mem√≥ria principal, aumentando o n√∫mero de acessos √† mem√≥ria secund√°ria. Para reduzir essa desvantagem, podem ser utilizadas [[√Årvores B+]].\n\n\n## Compara√ß√µes com outras formas de organiza√ß√£o de √≠ndices\n\nDe acordo com o artigo original [[√Årvores B#^bf7c66]], algumas vantagens de se utilizar √Årvores B s√£o:\n- N√£o h√° degrada√ß√£o de performance se a taxa de ocupa√ß√£o do dispositivo de armazenamento for alta\n- A ordem natural das chaves √© mantida.\n\t- Permite processamentos de busca por predecessores, sucessores, busca por registros iniciando com em uma chave definida etc\n- Se buscas, inser√ß√µes e remo√ß√µes forem feitas em batches, o processamento √© muito eficiente, essencialmente processando o arquivo sequencialmente. Desde que seja feita uma ordena√ß√£o das requisi√ß√µes pela chave.\n\n# Refer√™ncias\n- INE 5408 - Estruturas de Dados - Aulas 6.6 e 6.7 - √Årvores-B, conceitos, algoritmos \u0026 exemplos. https://youtu.be/zkVGGbmjTH4\n- Bayer, Rudolf, and Edward McCreight. \"Organization and maintenance of large ordered indexes.\" Software pioneers. Springer, Berlin, Heidelberg, 2002. 245-262. ^bf7c66\n- [[1998Sedgewick_AlgorithmInCPart1-4|Algorithms in C. Parts 1-4 (Sedgewick. 1998)]]\n- [[2009Cormen_IntroductionToAlgorithms|Cormen et al. (2009)]]\n- https://www.geeksforgeeks.org/introduction-of-b-tree/","lastmodified":"2022-09-06T11:15:32.39125597Z","tags":null},"/vault/estrutura-dados/An%C3%A1lise-de-algoritmos":{"title":"An√°lise de algoritmos","content":"\n\n# An√°lise de algoritmos\n\n## O que √© complexidade computacional?\n\nA complexidade computacional de um algoritmo √© uma medida da quantidade de recursos computacionais utilizados. Esses recursos s√£o: Tempo e espa√ßo (mem√≥ria).\n\nO tempo de execu√ß√£o √© determinado por dois fatores:\n- O custo de execu√ß√£o de cada comando.\n\t- Depende do computador, compilador, linguagens de programa√ß√£o, sistema operacional entre outros.\n- A frequ√™ncia de execu√ß√£o de cada comando.\n\t- Depende do algoritmo e da entrada.\n\nA separa√ß√£o desses dois fatores permite uma an√°lise de algoritmos independente da plataforma computacional. \n\nOpera√ß√µes elementares:\n- Opera√ß√£o com n√∫mero de passos constante.\n\n### Exemplos\n\nQual a quantidade de mem√≥ria e o n√∫mero de opera√ß√µes utilizados pela fun√ß√£o a seguir, que recebe uma lista $L$? #pergunta \n\n```\nfunction count_even(L):\n\tcount = 0\n\tfor x in L:\n\t\tif x % 2 == 0:\n\t\t\tcount = count+1\n\treturn count\t\n```\n\nO que acontece com a mem√≥ria utilizada e o n√∫mero de opera√ß√µes conforme o tamanho da lista $L$ varia? #pergunta \n\n\u003e A an√°lise de complexidade de algoritmos busca caracterizar a quantidade de mem√≥ria e o n√∫mero de opera√ß√µes conforme o tamanho da entrada aumenta. \n\nUm outro exemplo √© o algoritmo a seguir.\n```\n# Considera a lista L indexada a partir do zero\nfunction f(L):\n\ti = 0\n\tn = len(L)\n\twhile i \u003c n/2:\n\t\tL[i], L[n-i-1] = L[n-i-1], L[i]\n\t\ti = i+1\n```\n\n- O que o algoritmo realiza? #pergunta \n\t- Inverte a lista $L$.\n- O algoritmo executa as mesmas opera√ß√µes para qualquer lista de tamanho $n$. Cada passo executado corresponde √† troca de posi√ß√£o entre dois elementos da lista. Ou seja, cada passo corresponde √† execu√ß√£o de uma itera√ß√£o do la√ßo. Al√©m disso, s√£o executados $n/2$ passos. \n\n#### Soma e produto de matrizes\n\nConsidere duas matrizes $A=(a_{ij})$ e $B=(b_{ij})$, ambas com dimens√£o $n \\times n$. A obten√ß√£o da matriz soma $C_{ij}$ pode ser realizada pelo seguinte algoritmo.\n```python\nfor i = 1, ..., n\n\tfor j = 1, ..., n\n\t\tc[i, j] = a[i, j] + b[i, j]\n```\n\nCada passo do algoritmo corresponde √† execu√ß√£o de uma soma $a_{ij} + b_{ij}$. Quantas vezes essa soma ser√° realizada? #pergunta \n\nPara a obten√ß√£o da matriz produto $\\displaystyle D_{ij} = \\sum_{1\\leq k \\leq n}a_{ik}b_{kj}$\n```python\nfor i = 1, ..., n\n\tfor j = 1, ..., n\n\t\tc[i, j] = 0\n\t\tfor k = 1, ..., n\n\t\t\tc[i, j] = c[i, j] + a[i, k]*b[k, j]\n```\n\nO comando mais executado no algoritmo √© a linha $c[i, j] = c[i, j] + a[i, k]*b[k, j]$. Quantas vezes ela √© executada? #pergunta\n\n## Nota√ß√£o Big-O\n\n\u003e A nota√ß√£o Big-O (Grande O) descreve matematicamente como o uso de recurso varia em rela√ß√£o √†s vari√°veis de entrada.\n\n\n### Alguma regras\n\n- Ignorar as constantes. Termos de ordem menor s√£o relevantes apenas para entradas pequenas. \n\n#### Alguns exemplos $O(n)$\n- $O(a + n)$ = $O(n)$ se $a$ √© constante\n```\nfunction count_even(L):\n\tcount = 0\n\tfor x in L:\n\t\tif x % 2 == 0:\n\t\t\tcount = count+1\n\treturn count\t\n```\n\n- $O(n + n) = O(2n) = O(n)$\n```\n\tfunction min_max1(L):\n\t\tsmall = +infinity\n\t\tbig = -infinity\n\t\tfor x in L:\n\t\t\tsmall = min(small, x)\n\t\tfor x in L:\n\t\t\tbig = max(big, x)\n\t\treturn small, big\n```\n\n```\n\tfunction min_max1(L):\n\t\tsmall = +infinity\n\t\tbig = -infinity\n\t\tfor x in L:\n\t\t\tsmall = min(small, x)\n\t\t\tbig = max(big, x)\n\t\treturn small, big\n```\n\n\n#### Comportamento assint√≥tico\n- Ignorar termos de ordem menor. Termos de ordem menor s√£o relevantes apenas para entradas pequenas. Estamos interessados em casos com entradas grandes ($n \\rightarrow \\infty$). \n\t- Por qu√™? #pergunta \n\n\n## Complexidade de pior caso\n\nH√° algoritmos em que o n√∫mero de opera√ß√µes executadas depende da entrada. \n\n```\nfunction busca(x, v):\n\ti = 0\n\twhile i \u003c n:\n\t\tif x == v[i]\n\t\t\treturn True\n\t\ti = i + 1\n\treturn False\n```\n\nNesses casos, frequentemente, o interesse est√° na complexidade de pior caso, isto √©, o caso que est√° relacionado com o maior n√∫mero de opera√ß√µes. Outro caso importante √© a an√°lise de caso m√©dio, isto √©, em determinar, na m√©dia, qual a complexidade do algoritmo. Essa an√°lise pode ser bastante sofisiticada e, em geral, est√° fora do escopo deste material.\n\n## Algumas classes de complexidade\n\n### Ordem de complexidade linear, $O(n)$\n\n```\nfunction busca(x, v):\n\ti = 0\n\twhile i \u003c n:\n\t\tif x == v[i]\n\t\t\treturn True\n\t\ti = i + 1\n\treturn False\n```\n\n### Ordem de complexidade quadr√°tica, $O(n^2)$\nSupondo que as listas $va$ e $vb$ possuem $n$ elementos.\n\n```\nfunction busca(va, vb):\n\tfor x in va:\n\t\tfor y in vb:\n\t\t\tif x == y:\n\t\t\t\treturn True\n\treturn False\n```\n\n### Ordem de complexidade logar√≠timica, $O(log\\ n)$\n\nQuantas vezes √© necess√°rio dividir um n√∫mero positivo $n \u003e 0$ pela metade para chegar √† unidade?\n\n```\nfunction divisoes(n):\n\ti = 0\n\twhile n != 1:\n\t\tn = n//2\n\t\ti = i+1\n\treturn i\n```\n\n### Compara√ß√£o entre classes\n\nOs gr√°ficos a seguir apresentam uma compara√ß√£o visual entre as classes. No eixo horizontal est√° o tamanho do problema e no eixo vertical o custo (ambos em escala arbitr√°ria).\n\n![[/vault/estrutura-dados/attachments/Pasted image 20220419152228.png|500]]\n\n![[/vault/estrutura-dados/attachments/Pasted image 20220419152332.png|500]]\n\n![[vault/estrutura-dados/attachments/Pasted image 20220419152407.png | 500]]\n\n# Refer√™ncias e outros materiais\n- Complexidade de Algoritmos I - No√ß√£o Intuitiva. Canal do Youtube: Programa√ß√£o Din√¢mica. https://youtu.be/KVlGx-9CuO4\n- Nota√ß√£o do O Grande - Complexidade de Algoritmos II. Canal do Youtube: Programa√ß√£o Din√¢mica. https://youtu.be/UQzCFkRbIrE\n- [[2011Sedgewick_Algorithms|Algorithms (Sedgewick e Wayne. 2011)]]\n- Big O Notation. Canal do Youtube Hacker Hank. https://www.youtube.com/watch?v=v4cd1O4zkGw\n- J. Szwarcfiter e L. Markenzon (1994). Estruturas de dados e seus algoritmos (2a Edi√ß√£o). \n","lastmodified":"2022-09-06T11:15:32.39125597Z","tags":null},"/vault/estrutura-dados/Recurs%C3%A3o":{"title":"Recurs√£o","content":"\n# Introdu√ß√£o\n\u003e To iterate is human, to recurse is divine (Laurence Peter Deutsch)\n\n- Recurs√£o √© um conceito gen√©rico presente em v√°rias disciplinas e na pr√≥pria natureza.\n- Uma entidade (ou conceito) √© recursivo quando √© composto por inst√¢ncias menores dele mesmo (ou similares). \n- Alguns exemplo (Figura retirada de [[2017Sanchez_IntroductionRecursiveProgramming|Introduction to recursive programming. Sanchez (2019)]]): \n\t- ![[vault/estrutura-dados/attachments/Pasted image 20220412150007.png]]\n\t- H√° tamb√©m entidades menos concretas que s√£o identificadas como recursivas. Por exemplo a sequ√™ncia $(s_1, s_2, \\ldots, s_n)$ definida de acordo com $$s_n = s_{n-1} + s_{n-2}.$$ A f√≥rmula define que o $n$-√©simo termo da sequ√™ncia √© dado pela soma dos dois anteriores. Portanto, os termos da sequ√™ncia s√£o definidos a partir deles mesmos. Note que n√£o √© apenas uma sequ√™ncia que √© definida a partir da f√≥rmula. \n\t\t- Quais s√£o exemplos de sequ√™ncias que s√£o definidas pelas f√≥rmula apresentada #pergunta \n\t\t\t- Tipicamente, se utiliza $s_1 = s_2 = 1$, o que define a [[Sequ√™ncia de Fibonacci]].\n\n## Alguns exemplos\n- A [[Sequ√™ncia de Fibonacci]] pode ser entendida como uma fun√ß√£o definida da seguinte forma. $$F(n) = \\begin{cases}1, \u0026 n = 1, \\\\ 1, \u0026 n = 2,\\\\ F(n-1) + F(n-2), \u0026 n \\geq 3.\\end{cases}$$\n\t- Note a exist√™ncia de dois tipos de express√£o:\n\t\t- Casos-base: Casos em que o resultado pode ser obtido de forma trivial ($n=1$ e $n=2$).\n\t\t- Casos recursivos: Casos em que h√° depend√™ncia de inst√¢ncias menores (mais simples) da pr√≥pria fun√ß√£o $(n \\geq 3)$.\n\t\t- Em uma defini√ß√£o recursiva, √© necess√°rio ter pelo menos um caso-base? #pergunta \n\n```python\n def fib(n):\n    if n == 1 or n == 2:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)\n```\n\n- Outra fun√ß√£o intrinsicamente recursiva √© a fatorial de um n√∫mero positivo $n$. $$n! = 1 \\cdot 2 \\cdot 3 \\ldots \\cdot n.$$ No entanto, n√£o h√° uma depend√™ncia expl√≠cita da pr√≥pria fun√ß√£o fatorial. Para express√°-la de forma recursiva √© necess√°rio observar que $n! = (n-1)! \\cdot n$. Com isso, tem-se: $$n! = \\begin{cases} 1, \u0026 n = 1, \\\\ (n-1)! \\cdot n \u0026 n \\geq 2. \\end{cases}$$\n\t- Qual o caso-base e qual o caso recursivo da fun√ß√£o fatorial? #pergunta \n\n```python\ndef fat(n):\n    if n == 0:\n        return 1\n    else:\n        return fat(n-1)*n\n```\n\n- De forma similar, o problema de se calcular a soma dos $n$ primeiros n√∫meros positivos pode ser formulado de forma recursiva. Uma fun√ß√£o que representa a solu√ß√£o do problema √© $$S(n) = 1 + 2 + \\ldots + n.$$ Novamente, n√£o √© direta a defini√ß√£o recursiva de $S$. √â necess√°rio notar que $$S(n) = S(n-1) + n.$$\n\t- Para esse problema, como pode ser escrita a fun√ß√£o recursiva? Identificando o caso-base e o caso recursivo #pergunta \n\n## Desenvolvendo uma solu√ß√£o recursiva*\n\nO desenvolvimento de solu√ß√µes recursivas para um problema depende da defini√ß√£o do(s) caso(s)-base e do(s) caso(s) recursivos. Em geral, o primeiro passo √© definir casos-base e o maior desafio est√° em descrever os casos recursivos. Para isso, √© necess√°rio entender dois conceitos importantes:\n1. Decomposi√ß√£o do problema\n2. Indu√ß√£o\n\n### Decomposi√ß√£o de um problema\n\nA decomposi√ß√£o √© um conceito importante n√£o apenas no conceito de recurs√£o. Trata-se da ideia de quebrar problemas complexos em problemas menores (mais simples) que sejam mais f√°ceis de expressar, computar ou resolver. No contexto de recurs√£o, a decomposi√ß√£o de um problema consiste em quebr√°-lo em subproblemas, alguns similares ao original. Com isso, a solu√ß√£o do problema original passa a consistir em resolver e combinar as solu√ß√µes do subproblemas. √â importante observar que a decomposi√ß√£o em subproblemas deve aproximar o problema original do(s) caso(s) base. \n\n- Considere o problema de encontrar a soma dos $n$ primeiros n√∫meros positivos: $S(n) = 1 + 2 + \\ldots + n$. Enquanto o caso base √© $S(1) = 1$, √© poss√≠vel decompor o problema de diversas formas para definir os casos recursivas. \n\t- Uma possibilidade √© reduzir $n$ em apenas uma unidade. Nesse caso, o objetivo seria definir $S(n)$ em fun√ß√£o de $S(n-1)$. \n\t\t- Qual seria uma outra possibilidade? #desafio\n\n- Considere o problema de computar a soma dos elementos em uma lista $L = [a_0, a_1, \\ldots, a_{n-1}]$, $S(L) = \\sum_{i=0}^{n-1}a_i$\n\t- O problema pode ser decomposto diminuindo o seu tamanho em uma unidade $$S(L) = \\begin{cases}0, \u0026 n = 0,\\\\ S(L[0:n-1]) + a_{n-1}, \u0026 n \u003e 0.\\end{cases}$$\n\t\t- Qual √© o caso-base e o caso recursivo do exemplo acima? #pergunta \n\t- Uma op√ß√£o, que tamb√©m diminui o problema em uma unidade √© $$S(L) = \\begin{cases}0, \u0026 n = 0,\\\\ a_0 + S(L[1:n]), \u0026 n \u003e 0.\\end{cases}$$\n\t\t- Qual √© o caso-base e o caso recursivo do exemplo acima? #pergunta\n\t- Tamb√©m √© poss√≠vel separar o problema ao meio $$S(L) = \\begin{cases}0, \u0026 n = 0,\\\\ a_0, \u0026 n = 1, \\\\ S(L[0:n//2]) + S(L[n//2:n]), \u0026 n \u003e 1.\\\\ \\end{cases}$$\n\t\t- Qual(is) o(s) caso(s)-base e o(s) caso(s) recursivo(s) do exemplo acima? #pergunta \n\t- Os c√≥digos a seguir implementam cada uma das alternativas, respectivamente.\n\t\n```python\ndef sum_first1(L):\n\tn = len(L)\n\tif n == 0:\n\t\treturn 0\n\telse:\n\t\treturn sum_first1(L[0:n-1]) + L[n-1]\n\ndef sum_first2(L):\t\n    if len(L) == 0:\n        return 0\n    else:\n        return L[0] + sum_first2(L[1:])\n\ndef sum_first3(L):\n    n = len(L)\n    if n == 0:\n        return 0\n    elif n == 1:\n        return L[0]\n    else:\n        return sum_first3(L[0:n//2]) + sum_first3(L[n//2:])\n```\n\n### Indu√ß√£o\n\nO termo *indu√ß√£o* √© relacionado a provas matem√°ticas por indu√ß√£o. A ideia principal √© que, ao se desenvolver uma solu√ß√£o recursiva, deve-se assumir que o c√≥digo recursivo j√° funciona para inst√¢ncias menores (mais simples) do problema que se deseja resolver (mesmo que ele ainda n√£o esteja implementado). \n\nUma prova por indu√ß√£o √© composta por duas partes:\n1. O caso-base. Verificar que a f√≥rmula √© v√°lida para o menor caso poss√≠vel $n_0$.\n2. O passo indutivo. Assumir que a f√≥rmula √© verdadeira para um valor gen√©rtico $n$ (hip√≥tese indutiva). Em seguida, usando a hip√≥tese indutiva, mostrar que a f√≥rmula tamb√©m √© v√°lida para $n+1$. \n\nSe for poss√≠vel mostrar os dois passos, ent√£o se diz que a f√≥rmula √© v√°lida para qualquer $n \\geq n_0$.\n\n#### Exemplo de prova por indu√ß√£o\n\nConsidere a seguinte afirma√ß√£o. A soma dos $n$ primeiros n√∫meros positivos $S(n) = \\sum_{i=1}^{i=n} i$   pode ser calculada com a seguinte f√≥rmula $$S(n) = \\frac{n(n+1)}{2}.$$\n1. Caso-base. Para mostrar o caso-base basta verificar que para $n=1$ tem-se $$1 = S(1) = \\frac{1(1+1)}{2}.$$\n2. Para mostrar o passo indutivo √© necess√°rio mostrar que $$S(n+1) = \\frac{(n+1)(n+2)}{2},$$ assumindo que $$S(n) = \\frac{n(n+1)}{2}$$√© verdadeira. Para isso, note que $$S(n+1) = \\sum_{i=1}^n i + (n+1).$$ Mas $\\sum_{i=1}^n i = S(n) = \\frac{n(n+1)}{2}$. Ent√£o, $$S(n+1) = \\sum_{i=1}^n i + (n+1) = \\frac{n(n+1)}{2} + n + 1 = \\frac{n^2 + 3n + 2}{2} = \\frac{(n+1)(n+2)}{2}.$$\nO passo indutivo na prova costuma ser mais complicado, assim como o caso recursivo em um algoritmo recursivo. Quais as semelhan√ßas entre os passos da prova por indu√ß√£o e o desenvolvimento de uma solu√ß√£o recursiva (como as que foram realizadas anteriormente)? #pergunta \n\n\n## Programa√ß√£o imperativa e programa√ß√£o declarativa\n\nOs paradigmas de programa√ß√£o s√£o estrat√©gias gerais para o desenvolvimento de software.\n\n- A programa√ß√£o imperativa se concentrar em definir como os programas funcionam, com o c√≥digo descrevendo examente o fluxo de execu√ß√£o das instru√ß√µes e o estado do programa. Esse √© o paradigma seguido por uma solu√ß√£o iterativa.\n- Uma solu√ß√£o recursiva segue o paradigma declarativo, que se concentrar em definir o que um programa deveria realizar. A programa√ß√£o funcional segue esse conceito.\n\n## Exemplos de problemas\n- [[Torre de Hanoi]]\n- [[Exponencia√ß√£o melhorada]]\n\n# Refer√™ncias\n- [[2017Sanchez_IntroductionRecursiveProgramming|Introduction to recursive programming. Sanchez (2019)]]","lastmodified":"2022-09-06T11:15:32.39125597Z","tags":null},"/vault/estrutura-dados/Torre-de-Hanoi":{"title":"Torre de Hanoi","content":"\n# O problema da Torre de Hanoi\n\n\u003e No grande templo de Benares, abaixo do domo que marca o centro do mundo, repousa uma placa de bronze em que est√£o fixados tr√™s pinos de diamante (...). Em um desses pinos, na cria√ß√£o, Deus colocou 64 discos de puro ouro, o maior disco repousando na placa de bronze, e os seguintes, um menor que o anterior, repousando um em cima do outro. Essa √© a Torre de Brama. Dia e noite, sem descanso, monges transferem os discos de diamante de um pino para o outro de acordo com as leis imut√°veis de Bramah. Essas leis permitem apenas o movimento de um disco por vez e que este disco s√≥ possa ser posto em um pino de forma que n√£o haja disco menor sob ele. Quando os 64 discos tiverem sido transferidos do pino original para um dos demais, torre, templo e o mundo se tornar√° p√≥, e, com um trov√£o, desaparecer√°.(Tradu√ß√£o livre de Hinz, Andreas M., et al. The Tower of Hanoi-Myths and Maths. Basel: Birkh√§user, 2013).\n\n![[vault/estrutura-dados/attachments/Pasted image 20220419154457.png|500]]]\n\n# Um algoritmo\n\n```python\ndef hanoi(n, origin, aux, dest):\n\tif n == 0:\n\t\treturn\n\thanoi(n-1, origin, dest, aux)\n\tprint(\"Disc %d: Moved from %s to %s\" % (n, origin, dest))\n\thanoi(n-1, aux, origin, dest)\nhanoi(3, 'A', 'B', 'C')\n```\n\n### An√°lise da solu√ß√£o\n\nQuantos movimentos $T(n)$ o algoritmo realiza para $n$ discos?\n$$\n\\begin{align*}\n     T(n) \u0026= 2T(n-1) + 1 \\\\\n     \u0026= 4T(n-2) + 3\\\\\n     \u0026= 8T(n-3) + 7\\\\\n     \u0026\\ \\vdots \\\\\n     \u0026= 2^k T(n-k) + 2^k - 1\n\\end{align*}\n$$\n\nPortanto, o algoritmo realiza $O(2^n)$ opera√ß√µes. Mas e ent√£o, quando o mundo ir√° acabar? Em aproximadamente $2^{64}$ movimentos de discos. Supondo que fosse realizado um movimento por segundo, seriam necess√°rios $18446744073709551616 \\approx 1{,}84 \\cdot 10^{19}$ segundos. Qual a idade do universo em segundos? #pergunta \n\n","lastmodified":"2022-09-06T11:15:32.39125597Z","tags":null},"/vault/estrutura-dados/visao-geral":{"title":"Vis√£o geral","content":"\n\n- [[An√°lise de algoritmos]]\n- [[Recurs√£o]]\n- [[Tipo Abstrato de Dados]]\n- [[Listas ligadas]]\n- [[Pilhas]]\n\t- [[Gerenciamento de mem√≥ria]]\n- [[Filas]]\n- [[Tabelas de s√≠mbolos]]\n\t- [[Tabelas hash]]\n- [[√Årvores]]\n\t- [[√Årvores bin√°rias]]\n\t- [[√Årvores bin√°rias de busca]]\n\t\t- [[√Årvores bin√°rias de busca balanceadas]]\n- [[Grafos]]\n- [[Algoritmos de ordena√ß√£o]]\n- [[Organiza√ß√£o de arquivos]]\n\t- [[√Årvores B]] e [[√Årvores B+]]\n","lastmodified":"2022-09-06T11:15:32.39125597Z","tags":null}}